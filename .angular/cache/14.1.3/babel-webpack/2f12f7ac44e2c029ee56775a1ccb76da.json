{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { merge } from 'lodash-es';\nimport { FUSE_APP_CONFIG } from '@fuse/services/config/config.constants';\nimport * as i0 from \"@angular/core\";\nexport let FuseConfigService = /*#__PURE__*/(() => {\n  class FuseConfigService {\n    /**\n     * Constructor\n     */\n    constructor(config) {\n      // Private\n      this._config = new BehaviorSubject(config);\n    } // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Setter & getter for config\n     */\n\n\n    set config(value) {\n      // Merge the new config over to the current config\n      const config = merge({}, this._config.getValue(), value); // Execute the observable\n\n      this._config.next(config);\n    } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n\n    get config$() {\n      return this._config.asObservable();\n    } // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Resets the config to the default\n     */\n\n\n    reset() {\n      // Set the config\n      this._config.next(this.config);\n    }\n\n  }\n\n  FuseConfigService.ɵfac = function FuseConfigService_Factory(t) {\n    return new (t || FuseConfigService)(i0.ɵɵinject(FUSE_APP_CONFIG));\n  };\n\n  FuseConfigService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FuseConfigService,\n    factory: FuseConfigService.ɵfac,\n    providedIn: 'root'\n  });\n  return FuseConfigService;\n})();","map":null,"metadata":{},"sourceType":"module"}